(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[929],{3999:(e,t,a)=>{"use strict";a.d(t,{cn:()=>r});var s=a(2596),i=a(9688);function r(){for(var e=arguments.length,t=Array(e),a=0;a<e;a++)t[a]=arguments[a];return(0,i.QP)((0,s.$)(t))}},4964:(e,t,a)=>{"use strict";a.d(t,{Xi:()=>d,av:()=>l,j7:()=>c,tU:()=>n});var s=a(5155);a(2115);var i=a(7768),r=a(3999);function n(e){let{className:t,...a}=e;return(0,s.jsx)(i.bL,{"data-slot":"tabs",className:(0,r.cn)("flex flex-col gap-2",t),...a})}function c(e){let{className:t,...a}=e;return(0,s.jsx)(i.B8,{"data-slot":"tabs-list",className:(0,r.cn)("bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]",t),...a})}function d(e){let{className:t,...a}=e;return(0,s.jsx)(i.l9,{"data-slot":"tabs-trigger",className:(0,r.cn)("data-[state=active]:bg-background data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/50 inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",t),...a})}function l(e){let{className:t,...a}=e;return(0,s.jsx)(i.UC,{"data-slot":"tabs-content",className:(0,r.cn)("flex-1 outline-none",t),...a})}},6474:(e,t,a)=>{"use strict";a.d(t,{A:()=>s});let s=(0,a(9946).A)("ChevronDown",[["path",{d:"m6 9 6 6 6-6",key:"qrunsl"}]])},7168:(e,t,a)=>{"use strict";a.d(t,{$:()=>d});var s=a(5155);a(2115);var i=a(9708),r=a(2085),n=a(3999);let c=(0,r.F)("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",{variants:{variant:{default:"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90",destructive:"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60",outline:"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50",secondary:"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-9 px-4 py-2 has-[>svg]:px-3",sm:"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5",lg:"h-10 rounded-md px-6 has-[>svg]:px-4",icon:"size-9"}},defaultVariants:{variant:"default",size:"default"}});function d(e){let{className:t,variant:a,size:r,asChild:d=!1,...l}=e,o=d?i.DX:"button";return(0,s.jsx)(o,{"data-slot":"button",className:(0,n.cn)(c({variant:a,size:r,className:t})),...l})}},8334:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>g});var s=a(5155),i=a(2115),r=a(6874),n=a.n(r),c=a(6766),d=a(7168),l=a(8482),o=a(4964),h=a(4213);let u=(0,a(9946).A)("Code",[["polyline",{points:"16 18 22 12 16 6",key:"z7tu5w"}],["polyline",{points:"8 6 2 12 8 18",key:"1eg1df"}]]);var m=a(5487),p=a(6474),x=a(7550),y=a(2138);function g(){return(0,s.jsxs)("div",{className:"flex min-h-screen flex-col",children:[(0,s.jsx)("header",{className:"sticky top-0 z-10 border-b bg-background/95 backdrop-blur",children:(0,s.jsxs)("div",{className:"flex h-16 items-center justify-between py-4",children:[(0,s.jsxs)("div",{className:"flex items-center pl-4 gap-2",children:[(0,s.jsx)(h.A,{className:"h-6 w-6"}),(0,s.jsx)("h1",{children:(0,s.jsx)("a",{className:"text-xl font-bold",href:"/cache-academy",children:"Cache Academy"})})]}),(0,s.jsxs)("nav",{className:"flex items-center pr-4 gap-4",children:[(0,s.jsx)(n(),{href:"/",className:"font-medium text-muted-foreground hover:text-primary",children:"Home"}),(0,s.jsx)(n(),{href:"/access-speeds",className:"font-medium text-muted-foreground hover:text-primary",children:"Access Speeds"}),(0,s.jsx)(n(),{href:"/cache-mechanics",className:"font-medium text-primary",children:"Cache Mechanics"}),(0,s.jsx)(n(),{href:"/comparison",className:"font-medium text-muted-foreground hover:text-primary",children:"Comparison"}),(0,s.jsx)(n(),{href:"/advanced-concepts",className:"font-medium text-muted-foreground hover:text-primary",children:"Advanced Concepts"})]})]})}),(0,s.jsxs)("main",{className:"flex-1",children:[(0,s.jsx)("section",{className:"pt-12 md:pt-16",children:(0,s.jsx)("div",{className:"mx-auto max-w-[980px]",children:(0,s.jsxs)("div",{className:"text-center mb-4",children:[(0,s.jsx)("h1",{className:"text-4xl font-bold tracking-tight md:text-5xl mb-4",children:"Four Ways to Manage Your Cache"}),(0,s.jsx)("p",{className:"text-xl text-muted-foreground",children:"Explore the four main strategies for moving data between your cache and database"})]})})}),(0,s.jsx)("section",{className:"py-8",children:(0,s.jsx)(v,{})})]}),(0,s.jsx)("footer",{className:"border-t px-4 py-6",children:(0,s.jsxs)("div",{className:"w-full flex flex-col items-center justify-between gap-4 md:flex-row",children:[(0,s.jsxs)("p",{className:"text-center text-sm text-muted-foreground md:text-left",children:["\xa9 ",new Date().getFullYear()," Cache Academy. All rights reserved."]}),(0,s.jsxs)("div",{className:"flex items-center gap-4",children:[(0,s.jsx)(n(),{href:"/",className:"text-sm text-muted-foreground hover:text-primary",children:"Home"}),(0,s.jsx)(n(),{href:"/access-speeds",className:"text-sm text-muted-foreground hover:text-primary",children:"Access Speeds"}),(0,s.jsx)(n(),{href:"/cache-mechanics",className:"text-sm text-muted-foreground hover:text-primary",children:"Cache Mechanics"}),(0,s.jsx)(n(),{href:"/comparison",className:"text-sm text-muted-foreground hover:text-primary",children:"Comparison"}),(0,s.jsx)(n(),{href:"/advanced-concepts",className:"text-sm text-muted-foreground hover:text-primary",children:"Advanced Concepts"}),(0,s.jsx)("a",{href:"https://ko-fi.com/B0B014O6OC",target:"_blank",rel:"noopener noreferrer",children:(0,s.jsx)("img",{height:"36",style:{border:"0px",height:"36px"},src:"https://storage.ko-fi.com/cdn/kofi5.png?v=3",alt:"Buy Me a Coffee at ko-fi.com"})})]})]})})]})}function v(){let[e,t]=(0,i.useState)("read-through"),[a,r]=(0,i.useState)(0),[g,v]=(0,i.useState)(!1),f={"read-through":{title:"Read-Through Cache",description:"When data isn't in the cache, it's automatically fetched from the database.",diagram:"/cache-academy/images/cache-read-through.svg",steps:[{title:"Initial State",description:"The system starts with some data in the cache and all data in the database.",cacheState:{key1:"value1"},dbState:{key1:"value1",key2:"value2",key3:"value3"},appState:"Application ready to process read operations"},{title:"Read Request (Cache Hit)",description:"Application requests key1, which is found in the cache",cacheState:{key1:"value1"},dbState:{key1:"value1",key2:"value2",key3:"value3"},appState:"Reading key1 from cache",highlight:"cache"},{title:"Read Request (Cache Miss)",description:"Application requests key2, which is not in the cache",cacheState:{key1:"value1"},dbState:{key1:"value1",key2:"value2",key3:"value3"},appState:"Cache miss for key2, fetching from database",highlight:"app"},{title:"Database Read",description:"The cache automatically fetches key2 from the database",cacheState:{key1:"value1"},dbState:{key1:"value1",key2:"value2",key3:"value3"},appState:"Reading key2 from database",highlight:"db"},{title:"Cache Update",description:"The cache is updated with the value of key2",cacheState:{key1:"value1",key2:"value2"},dbState:{key1:"value1",key2:"value2",key3:"value3"},appState:"Updating cache with key2 value",highlight:"cache",highlightCacheStateText:"key2"},{title:"Read Complete",description:"The read operation is complete, and the value is returned to the application",cacheState:{key1:"value1",key2:"value2"},dbState:{key1:"value1",key2:"value2",key3:"value3"},appState:"Read operation completed successfully"}],pros:["Automatic cache population","Simplified application logic","Cache always has requested data after first access"],cons:["Initial read latency on cache miss","Potential for cache pollution","May fetch unnecessary data"],pseudoCode:"// Read-Through Cache implementation\nfunction readData(key) {\n  // Check if data exists in cache\n  if (cache.has(key)) {\n    return cache.get(key);  // Return from cache (cache hit)\n  }\n  \n  // If not in cache, cache automatically gets from database\n  const data = database.get(key);  // Cache miss\n  \n  // Store in cache for future reads\n  cache.set(key, data);\n  \n  return data;\n}\n\nfunction writeData(key, value) {\n  // This depends on which write strategy you pair with read-through\n  // For example, with write-through:\n  cache.set(key, value);\n  database.set(key, value);\n  \n  return true;\n}",bestFor:"Applications that need simple caching with minimal code complexity"},"write-through":{title:"Write-Through Cache",description:"Write data to both the cache and database at the same time.",diagram:"/cache-academy/images/cache-write-through.svg",steps:[{title:"Initial State",description:"The system starts with synchronized data in both cache and database.",cacheState:{key1:"value1",key2:"value2"},dbState:{key1:"value1",key2:"value2"},appState:"Application ready to process write operations"},{title:"Write Request",description:"Application receives a write request to update key1 to 'new-value1'",cacheState:{key1:"value1",key2:"value2"},dbState:{key1:"value1",key2:"value2"},appState:"Processing write request for key1='new-value1'",highlight:"app"},{title:"Simultaneous Write",description:"The cache and database are updated simultaneously",cacheState:{key1:"new-value1",key2:"value2"},dbState:{key1:"new-value1",key2:"value2"},highlightCacheStateText:"key1",highlightDbStateText:"key1",appState:"Writing to cache and database",highlight:"both"},{title:"Write Complete",description:"The write operation is complete, and both systems are in sync",cacheState:{key1:"new-value1",key2:"value2"},dbState:{key1:"new-value1",key2:"value2"},appState:"Write operation completed successfully"}],pros:["Data consistency between cache and database","Simple to implement","No stale data"],cons:["Higher write latency","More write operations to the database","Higher system load during writes"],pseudoCode:"// Write-Through Cache implementation\nfunction writeData(key, value) {\n  // Write to both cache and database at the same time\n  cache.set(key, value);\n  database.set(key, value);\n  \n  // Return success only when both operations complete\n  return true;\n}\n\nfunction readData(key) {\n  // Check if data exists in cache\n  if (cache.has(key)) {\n    return cache.get(key);  // Return from cache\n  }\n  \n  // If not in cache, get from database\n  const data = database.get(key);\n  \n  // Store in cache for future reads\n  cache.set(key, data);\n  \n  return data;\n}",bestFor:"Applications where data consistency is the top priority"},"write-back":{title:"Write-Back Cache",description:"Write data to the cache first, then update the database later.",diagram:"/cache-academy/images/cache-write-back.svg",steps:[{title:"Initial State",description:"The system starts with synchronized data in both cache and database.",cacheState:{key1:"value1",key2:"value2"},dbState:{key1:"value1",key2:"value2"},appState:"Application ready to process write operations"},{title:"Write Request",description:"Application receives a write request to update key1 to 'new-value1'",cacheState:{key1:"value1",key2:"value2"},dbState:{key1:"value1",key2:"value2"},appState:"Processing write request for key1='new-value1'",highlight:"app"},{title:"Cache Update",description:"The cache is updated immediately",cacheState:{key1:"new-value1",key2:"value2"},dbState:{key1:"value1",key2:"value2"},highlightCacheStateText:"key1",appState:"Writing to cache only",highlight:"cache"},{title:"Async Database Update",description:"The database is updated asynchronously after some time",cacheState:{key1:"new-value1",key2:"value2"},dbState:{key1:"new-value1",key2:"value2"},highlightDbStateText:"key1",appState:"Asynchronously writing to database",highlight:"db"},{title:"Write Complete",description:"The write operation is complete, and both systems are in sync",cacheState:{key1:"new-value1",key2:"value2"},dbState:{key1:"new-value1",key2:"value2"},appState:"Write operation completed successfully"}],pros:["Lower write latency","Reduced database load","Better performance for write-heavy workloads"],cons:["Risk of data loss if cache fails before database update","Potential data inconsistency","More complex implementation"],pseudoCode:'// Write-Back Cache implementation\n// Track dirty (modified) entries that need to be written to database\nlet dirtyEntries = new Set();\n\nfunction writeData(key, value) {\n  // Write to cache immediately\n  cache.set(key, value);\n  \n  // Mark this entry as "dirty" (needs to be written to database)\n  dirtyEntries.add(key);\n  \n  // Schedule background flush to database\n  scheduleFlush();\n  \n  // Return success immediately after cache write\n  return true;\n}\n\nfunction flushToDatabaseAsync() {\n  // Process all dirty entries\n  for (const key of dirtyEntries) {\n    const value = cache.get(key);\n    database.set(key, value);\n    dirtyEntries.delete(key);\n  }\n}\n\nfunction readData(key) {\n  // Check if data exists in cache\n  if (cache.has(key)) {\n    return cache.get(key);  // Return from cache\n  }\n  \n  // If not in cache, get from database\n  const data = database.get(key);\n  \n  // Store in cache for future reads\n  cache.set(key, data);\n  \n  return data;\n}',bestFor:"Applications that need fast write performance"},"write-around":{title:"Write-Around Cache",description:"Write data directly to the database, skipping the cache.",diagram:"/cache-academy/images/cache-write-around.svg",width:480,height:640,steps:[{title:"Initial State",description:"The system starts with synchronized data in both cache and database.",cacheState:{key1:"value1",key2:"value2"},dbState:{key1:"value1",key2:"value2"},appState:"Application ready to process write operations"},{title:"Write Request",description:"Application receives a write request to update key1 to 'new-value1'",cacheState:{key1:"value1",key2:"value2"},dbState:{key1:"value1",key2:"value2"},appState:"Processing write request for key1='new-value1'",highlight:"app"},{title:"Database Update",description:"The database is updated directly, bypassing the cache",cacheState:{key1:"value1",key2:"value2"},dbState:{key1:"new-value1",key2:"value2"},highlightDbStateText:"key1",appState:"Writing directly to database",highlight:"db"},{title:"Cache Invalidation",description:"The cache entry for key1 is invalidated (optional step)",cacheState:{key1:"value1",key2:"value2"},strikeThroughCacheStateText:"key1",dbState:{key1:"new-value1",key2:"value2"},appState:"Invalidating cache entry for key1",highlight:"cache"},{title:"Read Request",description:"On the next read, the updated value is fetched from the database",cacheState:{key1:"new-value1",key2:"value2"},dbState:{key1:"new-value1",key2:"value2"},highlightCacheStateText:"key1",appState:"Reading key1 from database and updating cache",highlight:"both"}],pros:["Prevents cache pollution for write-once data","Good for read-heavy workloads with infrequent writes","Simpler than write-back"],cons:["Cache misses on recently written data","Higher read latency after writes","Potential for stale data if invalidation is missed"],pseudoCode:"// Write-Around Cache implementation\nfunction writeData(key, value) {\n  // Write directly to database, bypassing cache\n  database.set(key, value);\n  \n  // Optionally invalidate cache entry if it exists\n  if (cache.has(key)) {\n    cache.delete(key);  // Remove from cache\n  }\n  \n  return true;\n}\n\nfunction readData(key) {\n  // Check if data exists in cache\n  if (cache.has(key)) {\n    return cache.get(key);  // Return from cache\n  }\n  \n  // If not in cache, get from database\n  const data = database.get(key);\n  \n  // Store in cache for future reads\n  cache.set(key, data);\n  \n  return data;\n}",bestFor:"Applications with data that is written once but rarely read"}}[e],b=f.steps[a];return(0,s.jsxs)("div",{className:"mx-auto max-w-5xl",children:[(0,s.jsxs)(o.tU,{value:e,onValueChange:e=>{t(e),r(0)},className:"w-full",children:[(0,s.jsxs)(o.j7,{className:"grid w-full grid-cols-4",children:[(0,s.jsx)(o.Xi,{value:"read-through",children:"Read-Through"}),(0,s.jsx)(o.Xi,{value:"write-through",children:"Write-Through"}),(0,s.jsx)(o.Xi,{value:"write-back",children:"Write-Back"}),(0,s.jsx)(o.Xi,{value:"write-around",children:"Write-Around"})]}),(0,s.jsxs)(o.av,{value:e,className:"mt-6",children:[(0,s.jsxs)(l.Zp,{children:[(0,s.jsxs)(l.aR,{children:[(0,s.jsx)(l.ZB,{children:f.title}),(0,s.jsx)(l.BT,{children:f.description})]}),(0,s.jsxs)(l.Wu,{children:[(0,s.jsxs)("div",{className:"flex flex-col mb-6",children:[(0,s.jsx)(c.default,{src:f.diagram,alt:f.title,width:f.width||720,height:f.height||720,className:"rounded-lg border shadow-sm self-center"}),(0,s.jsx)("br",{}),(0,s.jsx)("hr",{}),(0,s.jsxs)("div",{className:"mt-16 mb-4 flex items-center justify-between",children:[(0,s.jsx)("h3",{className:"text-lg font-medium",children:b.title}),(0,s.jsxs)("div",{className:"text-sm text-muted-foreground",children:["Step ",a+1," of ",f.steps.length]})]}),(0,s.jsx)("p",{className:"mb-6 text-muted-foreground",children:b.description}),(0,s.jsxs)("div",{className:"rounded-lg border-2 border-primary/20 bg-primary/5 p-4 mb-8",children:[(0,s.jsx)("h3",{className:"text-md font-medium mb-4",children:"Current State"}),(0,s.jsxs)("div",{className:"grid gap-6 md:grid-cols-3",children:[(0,s.jsxs)("div",{className:"rounded-lg border p-4 ".concat("app"===b.highlight||"both"===b.highlight?"border-primary bg-primary/5":""),children:[(0,s.jsxs)("div",{className:"mb-2 flex items-center gap-2",children:[(0,s.jsx)(u,{className:"h-5 w-5 text-muted-foreground"}),(0,s.jsx)("h4",{className:"font-medium",children:"Application"})]}),(0,s.jsx)("p",{className:"text-sm ".concat(a===f.steps.length-1?"text-green-700":"text-muted-foreground"),children:b.appState})]}),(0,s.jsxs)("div",{className:"rounded-lg border p-4 ".concat("cache"===b.highlight||"both"===b.highlight?"border-primary bg-primary/5":""),children:[(0,s.jsxs)("div",{className:"mb-2 flex items-center gap-2",children:[(0,s.jsx)(m.A,{className:"h-5 w-5 text-muted-foreground"}),(0,s.jsx)("h4",{className:"font-medium",children:"Cache"})]}),(0,s.jsxs)("div",{className:"space-y-1",children:[Object.entries(b.cacheState).map(e=>{let[t,a]=e;return(0,s.jsx)("div",{className:"rounded bg-muted px-2 py-1 text-xs",children:(0,s.jsxs)("span",{className:"font-mono ".concat(b.highlightCacheStateText===t?"text-green-700":""," ").concat(b.strikeThroughCacheStateText===t?"line-through":""),children:[t,': "',a,'"']})},t)}),0===Object.keys(b.cacheState).length&&(0,s.jsx)("div",{className:"rounded bg-muted px-2 py-1 text-xs",children:(0,s.jsx)("span",{className:"font-mono",children:"Empty cache"})})]})]}),(0,s.jsxs)("div",{className:"rounded-lg border p-4 ".concat("db"===b.highlight||"both"===b.highlight?"border-primary bg-primary/5":""),children:[(0,s.jsxs)("div",{className:"mb-2 flex items-center gap-2",children:[(0,s.jsx)(h.A,{className:"h-5 w-5 text-muted-foreground"}),(0,s.jsx)("h4",{className:"font-medium",children:"Database"})]}),(0,s.jsx)("div",{className:"space-y-1",children:Object.entries(b.dbState).map(e=>{let[t,a]=e;return(0,s.jsx)("div",{className:"rounded bg-muted px-2 py-1 text-xs",children:(0,s.jsxs)("span",{className:"font-mono ".concat(b.highlightDbStateText===t?"text-green-700":""),children:[t,': "',a,'"']})},t)})})]})]})]}),(0,s.jsxs)("div",{className:"flex items-center justify-between",children:[(0,s.jsx)(d.$,{variant:"outline",onClick:()=>{a>0&&r(a-1)},disabled:0===a,children:"Previous Step"}),(0,s.jsx)(d.$,{onClick:()=>{a<f.steps.length-1&&r(a+1)},disabled:a===f.steps.length-1,children:"Next Step"})]})]}),(0,s.jsx)("br",{}),(0,s.jsxs)("div",{className:"mt-6",children:[(0,s.jsxs)("div",{className:"flex items-center justify-between",children:[(0,s.jsx)("h3",{className:"text-lg font-medium",children:"Implementation"}),(0,s.jsxs)(d.$,{variant:"ghost",size:"sm",onClick:()=>v(!g),className:"flex items-center gap-1 "+(g?"":"text-blue-500"),children:[g?"Hide Code":"Show Code",(0,s.jsx)(p.A,{className:"h-4 w-4 transition-transform ".concat(g?"rotate-180":"")})]})]}),g&&(0,s.jsx)("div",{className:"rounded-lg bg-muted p-4 overflow-auto mt-2",children:(0,s.jsx)("pre",{className:"text-sm",children:(0,s.jsx)("code",{children:f.pseudoCode})})})]})]})]}),(0,s.jsx)("div",{className:"mt-16",children:(0,s.jsxs)(l.Zp,{children:[(0,s.jsx)(l.aR,{children:(0,s.jsxs)(l.ZB,{children:["Pros & Cons of ",f.title]})}),(0,s.jsxs)(l.Wu,{children:[(0,s.jsxs)("div",{className:"grid gap-4 md:grid-cols-2",children:[(0,s.jsxs)("div",{className:"rounded-lg border p-4",children:[(0,s.jsx)("h4",{className:"mb-2 font-medium text-green-600",children:"Pros"}),(0,s.jsx)("ul",{className:"space-y-1 text-sm",children:f.pros.map((e,t)=>(0,s.jsxs)("li",{className:"flex items-start gap-2",children:[(0,s.jsx)("span",{className:"text-green-600",children:"✓"})," ",e]},t))})]}),(0,s.jsxs)("div",{className:"rounded-lg border p-4",children:[(0,s.jsx)("h4",{className:"mb-2 font-medium text-red-600",children:"Cons"}),(0,s.jsx)("ul",{className:"space-y-1 text-sm",children:f.cons.map((e,t)=>(0,s.jsxs)("li",{className:"flex items-start gap-2",children:[(0,s.jsx)("span",{className:"text-red-600",children:"✗"})," ",e]},t))})]})]}),(0,s.jsxs)("div",{className:"mt-6 rounded-lg border-2 border-primary/20 bg-primary/5 p-4",children:[(0,s.jsx)("h4",{className:"mb-2 font-medium",children:"Best For"}),(0,s.jsx)("p",{children:f.bestFor})]})]})]})})]})]}),(0,s.jsxs)("div",{className:"mt-16 flex justify-between",children:[(0,s.jsx)(n(),{href:"/access-speeds",children:(0,s.jsxs)(d.$,{variant:"outline",className:"gap-2",children:[(0,s.jsx)(x.A,{className:"h-4 w-4"})," Back to Access Speeds"]})}),(0,s.jsx)(n(),{href:"/comparison",children:(0,s.jsxs)(d.$,{className:"gap-2",children:["Compare All Mechanisms ",(0,s.jsx)(y.A,{className:"h-4 w-4"})]})})]})]})}},8482:(e,t,a)=>{"use strict";a.d(t,{BT:()=>d,Wu:()=>l,ZB:()=>c,Zp:()=>r,aR:()=>n,wL:()=>o});var s=a(5155);a(2115);var i=a(3999);function r(e){let{className:t,...a}=e;return(0,s.jsx)("div",{"data-slot":"card",className:(0,i.cn)("bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm",t),...a})}function n(e){let{className:t,...a}=e;return(0,s.jsx)("div",{"data-slot":"card-header",className:(0,i.cn)("@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-[data-slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6",t),...a})}function c(e){let{className:t,...a}=e;return(0,s.jsx)("div",{"data-slot":"card-title",className:(0,i.cn)("leading-none font-semibold",t),...a})}function d(e){let{className:t,...a}=e;return(0,s.jsx)("div",{"data-slot":"card-description",className:(0,i.cn)("text-muted-foreground text-sm",t),...a})}function l(e){let{className:t,...a}=e;return(0,s.jsx)("div",{"data-slot":"card-content",className:(0,i.cn)("px-6",t),...a})}function o(e){let{className:t,...a}=e;return(0,s.jsx)("div",{"data-slot":"card-footer",className:(0,i.cn)("flex items-center px-6 [.border-t]:pt-6",t),...a})}},8556:(e,t,a)=>{Promise.resolve().then(a.bind(a,8334))}},e=>{var t=t=>e(e.s=t);e.O(0,[122,766,370,441,684,358],()=>t(8556)),_N_E=e.O()}]);